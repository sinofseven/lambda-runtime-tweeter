---
AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Lambda Runtime Tweeter

Parameters:
  Env:
    Type: String
    Default: current

  TrendApKey:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /twitter/tmco/trend_ap_key

  TrendApSecret:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /twitter/tmco/trend_ap_secret

  TrendApLayer:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /twitter/tmco/trend_ap_layer

Globals:
  Function:
    AutoPublishAlias: !Ref Env

Resources:
  AlertSNSTopic:
    Type: AWS::SNS::Topic

  DependenciesLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: src/layer

  TweeterFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/tweet
      Handler: index.handler
      Runtime: python3.7
      MemorySize: 512
      Timeout: 150
      Environment:
        Variables:
          TREND_AP_KEY: !Ref TrendApKey
          TREND_AP_SECRET: !Ref TrendApSecret
          REND_AP_READY_TIMEOUT: 30
          TREND_AP_TRANSACTION_FINISH_TIMEOUT: 10
          TREND_AP_MIN_REPORT_SIZE: 1
          TREND_AP_INITIAL_DELAY_MS: 1
          TREND_AP_MAX_DELAY_MS: 100
          TREND_AP_HTTP_TIMEOUT: 5
          TREND_AP_PREFORK_MODE: False
          TREND_AP_CACHE_DIR: /tmp/trend_cache
          TREND_AP_LOG_FILE: STDERR"
      Layers:
        - !Ref TrendApLayer
        - !Ref DependenciesLayer
      Policies:
        - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - kms:Decrypt
              Resource:
                - "*"

  TweeterLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${TweeterFunction}
      RetentionInDays: 14

  TweeterErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern: "error_message"
      LogGroupName: !Ref TweeterLogGroup
      MetricTransformations:
        - MetricName: TweeterError
          MetricNamespace: LambdaErrors
          MetricValue: "1"

  TweeterErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: TweeterError
      ActionsEnabled: true
      MetricName: TweeterError
      Namespace: LambdaErrors
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1.0
      ComparisonOperator: GreaterThanOrEqualToThreshold
      AlarmActions:
        - !Ref AlertSNSTopic

  TweeterTimeoutMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern: "Task timed out after"
      LogGroupName: !Ref TweeterLogGroup
      MetricTransformations:
        - MetricName: TweeterTimeout
          MetricNamespace: LambdaTimeouts
          MetricValue: "1"

  TweeterTimeoutAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: TweeterTimeout
      ActionsEnabled: true
      MetricName: TweeterTimeout
      Namespace: LambdaTimeouts
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1.0
      ComparisonOperator: GreaterThanOrEqualToThreshold
      AlarmActions:
        - !Ref AlertSNSTopic

  TweeterAbortMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern: "Process exited before completing request"
      LogGroupName: !Ref TweeterLogGroup
      MetricTransformations:
        - MetricName: TweeterAbort
          MetricNamespace: LambdaAborts
          MetricValue: "1"

  TweeterAbortAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: TweeterAbort
      ActionsEnabled: true
      MetricName: TweeterAbort
      Namespace: LambdaAborts
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1.0
      ComparisonOperator: GreaterThanOrEqualToThreshold
      AlarmActions:
        - !Ref AlertSNSTopic

  GetRuntimeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: invoke-lambda-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource: !Ref TweeterFunction.Alias

  Python38Function:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/python
      Handler: index.handler
      Runtime: python3.8
      MemorySize: 128
      Timeout: 60
      Role: !GetAtt GetRuntimeRole.Arn
      EventInvokeConfig:
        DestinationConfig:
          OnSuccess:
            Type: Lambda
            Destination: !Ref TweeterFunction.Alias
      Events:
        Daily:
          Type: Schedule
          Properties:
            Enabled: true
            Schedule: cron(0 0 * * ? *)

  Python37Function:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/python
      Handler: index.handler
      Runtime: python3.7
      MemorySize: 128
      Timeout: 60
      Role: !GetAtt GetRuntimeRole.Arn
      EventInvokeConfig:
        DestinationConfig:
          OnSuccess:
            Type: Lambda
            Destination: !Ref TweeterFunction.Alias
      Events:
        Daily:
          Type: Schedule
          Properties:
            Enabled: true
            Schedule: cron(15 0 * * ? *)

  Python36Function:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/python
      Handler: index.handler
      Runtime: python3.6
      MemorySize: 128
      Timeout: 60
      Role: !GetAtt GetRuntimeRole.Arn
      EventInvokeConfig:
        DestinationConfig:
          OnSuccess:
            Type: Lambda
            Destination: !Ref TweeterFunction.Alias
      Events:
        Daily:
          Type: Schedule
          Properties:
            Enabled: true
            Schedule: cron(30 0 * * ? *)

  Node10Function:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/node
      Handler: index.handler
      Runtime: nodejs10.x
      MemorySize: 128
      Timeout: 60
      Role: !GetAtt GetRuntimeRole.Arn
      EventInvokeConfig:
        DestinationConfig:
          OnSuccess:
            Type: Lambda
            Destination: !Ref TweeterFunction.Alias
      Events:
        Daily:
          Type: Schedule
          Properties:
            Enabled: true
            Schedule: cron(0 1 * * ? *)

  Node12Function:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/node
      Handler: index.handler
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 60
      Role: !GetAtt GetRuntimeRole.Arn
      EventInvokeConfig:
        DestinationConfig:
          OnSuccess:
            Type: Lambda
            Destination: !Ref TweeterFunction.Alias
      Events:
        Daily:
          Type: Schedule
          Properties:
            Enabled: true
            Schedule: cron(15 1 * * ? *)

  Node14Function:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/node
      Handler: index.handler
      Runtime: nodejs14.x
      MemorySize: 128
      Timeout: 60
      Role: !GetAtt GetRuntimeRole.Arn
      EventInvokeConfig:
        DestinationConfig:
          OnSuccess:
            Type: Lambda
            Destination: !Ref TweeterFunction.Alias
      Events:
        Daily:
          Type: Schedule
          Properties:
            Enabled: true
            Schedule: cron(20 1 * * ? *)

  Ruby25Function:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/ruby
      Handler: index.handler
      Runtime: ruby2.5
      MemorySize: 128
      Timeout: 60
      Role: !GetAtt GetRuntimeRole.Arn
      EventInvokeConfig:
        DestinationConfig:
          OnSuccess:
            Type: Lambda
            Destination: !Ref TweeterFunction.Alias
      Events:
        Daily:
          Type: Schedule
          Properties:
            Enabled: true
            Schedule: cron(30 1 * * ? *)

  Ruby27Function:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/ruby
      Handler: index.handler
      Runtime: ruby2.7
      MemorySize: 128
      Timeout: 60
      Role: !GetAtt GetRuntimeRole.Arn
      EventInvokeConfig:
        DestinationConfig:
          OnSuccess:
            Type: Lambda
            Destination: !Ref TweeterFunction.Alias
      Events:
        Daily:
          Type: Schedule
          Properties:
            Enabled: true
            Schedule: cron(45 1 * * ? *)
